// RWD BREAKPOINTS 
// mobile first! so you only have to use floats etc in larger sizes
// set breakpoints where your content breaks, not particular devices

@mixin breakpoint($point) {
  @if $point == xs {
    @media screen and (min-width: $xs-screen)  { @content; } 
  }
  @if $point == sm {
    @media screen and (min-width: $sm-screen) { @content; }
  }
  @if $point == md {
    @media screen and (min-width: $md-screen) { @content; }
  }
  @if $point == lg {
    @media screen and (min-width: $lg-screen) { @content; }
  }
  @else if $point == xl {
    @media screen and (min-width: $xl-screen) { @content; }
  }
}


// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
	font-size: ($sizeValue * 16) * 1px;
	font-size: $sizeValue * 1rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}


// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

/**
 * Lists
 */
@mixin no-bullets() {
  margin: 0;
  padding: 0;
  list-style: none;
}

@mixin inline-list() {
  @include no-bullets();
  li {
   display: inline-block; 
 }
}


@mixin inline-table-list() {
  @include no-bullets();
  display: table;
  li {
    display: table-cell;
  }
}

/**
 * Buttons
 */
@mixin button($font-size: $small, $color: $color__white, $bg-color: $color__default) {

  transition: all 0.25s ease;
  @include font-size($font-size);
  text-transform: uppercase; 
  text-decoration: none;
  line-height: 1.2;
  font-weight: 700;
  padding: .75em 3em;
  text-align: center;
  border: 0;
  background: $bg-color;
  color: $color !important;
  display: inline-block;
  border-radius: $element__border-radius-base;
  &:link,
  &:visited {
    color: $color !important;
  }
  &:hover,
  &:focus {
    background: $color__background;
    color: $color !important;
  }
}


/**
 * Elements
 */

@mixin badge($color: $color__white, $bgcolor: $color__default, $font-size: $tiny) {
  @include font-size($font-size);
  background-color: $bgcolor;
  border-radius: 10px;
  color: $color;
  display: inline-block;
  line-height: 1;
  min-width: 10px;
  padding: 3px 7px;
}

/**
 * Utilities
 */
@mixin center($xy:xy) {
  @if $xy == xy {
    left: 50%;
    top: 50%;
    bottom: auto;
    right: auto;
    @include transform(translateX(-50%) translateY(-50%));
  }
  @else if $xy == x {
    left: 50%;
    right: auto;
    @include transform(translateX(-50%));
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    @include transform(translateY(-50%));
  }
}

// Hide/show with transition
// http://bitsofco.de/3-useful-reusable-sass-mixins/#hidingandshowingelementswithatransition
@mixin fade($type) {

  @if $type == 'hide' {
    visibility: hidden;
    opacity: 0;
    transition: visibility 1s, opacity 1s;
  }

  @else if $type == 'show' {
    visibility: visible;
    opacity: 1;
    transition: visibility 1s, opacity 1s;
  }

}

@mixin screen-reader-text() {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute !important;
  width: 1px;
  /* many screen reader and browser combinations announce broken words as they would appear visually */
  word-wrap: normal !important;
}

@mixin visuallyhidden() {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}

@mixin border($position: bottom, $color: $color__background-hr, $weight: 1px, $style: solid, $space: .25em) {

  @if $position == 'bottom' {
    border-bottom: $weight $style $color;
    margin-bottom: $space;
    padding-bottom: $space;
  }
  @else if $position == 'top' {
    border-top: $weight $style $color;
    margin-top: $space;
    padding-top: $space;
  }
  @else if $position == 'right' {
    border-right: $weight $style $color;
    margin-right: $space;
    padding-right: $space;
  }
  @else if $position == 'left' {
    border-left: $weight $style $color;
    margin-left: $space;
    padding-left: $space;
  }

}